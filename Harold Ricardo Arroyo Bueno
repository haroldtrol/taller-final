import json
import os 


salas = {}


def menu():
    print("\n--- Menú Principal ---")
    print("1. Crear sala")
    print("2. Ver sala")
    print("3. Asignar puesto")
    print("4. Cargar sala")
    print("5. Salir")
    return input("Seleccione una opción: ")


def crear_sala():
    nombre_sala = input("Ingrese el nombre de la sala: ")
    filas = int(input("Ingrese la cantidad de filas: "))
    columnas = int(input("Ingrese la cantidad de columnas: "))
    

    sala = [['0' for _ in range(columnas)] for _ in range(filas)]
    
    salas[nombre_sala] = sala
    print(f"Sala '{nombre_sala}' creada exitosamente.")


def ver_sala():
    nombre_sala = input("Ingrese el nombre de la sala a visualizar: ")
    if nombre_sala in salas:
        sala = salas[nombre_sala]
        filas = len(sala)
        columnas = len(sala[0])
        

        letras = [chr(65 + i) for i in range(columnas)]

 
        ancho_celda = max(4, len(str(filas)))


        print(" " * (ancho_celda + 1), end="")
        for letra in letras:
            print(f"{letra.center(ancho_celda)}", end="")
        print("")
        

        for num_fila, fila in enumerate(sala, start=1):
            print(str(num_fila).rjust(ancho_celda), end=" ")
            for asiento in fila:
                print(f"[{asiento.center(1)}]".rjust(ancho_celda), end=" ")
            print("")
    else:
        print("La sala no existe.")


def asignar_puesto():
    nombre_sala = input("Ingrese el nombre de la sala: ")
    if nombre_sala in salas:
        sala = salas[nombre_sala]
        filas = len(sala)
        columnas = len(sala[0])
        
        while True:
            try:
                fila = int(input(f"Seleccione la fila del 1 al {filas}: "))
                if 1 <= fila <= filas:
                    break
                else:
                    print("Número de fila fuera de rango. Intente de nuevo.")
            except ValueError:
                print("Entrada no válida. Por favor ingrese un número.")
        
        letras = [chr(65 + i) for i in range(columnas)]
        while True:
            Cletra = input(f"Seleccione la letra de la columna (A-{letras[-1]}): ").upper()
            if Cletra in letras:
                columna = letras.index(Cletra)
                break
            else:
                print("Letra fuera de rango. Intente de nuevo.")
        

        if sala[fila-1][columna] == '0':
            sala[fila-1][columna] = 'X'
            print(f"Asiento {Cletra}{fila} asignado correctamente.")
        else:
            print("El asiento ya está ocupado. Intente con otro.")
    else:
        print("La sala no existe.")


def guardar_salas():
    with open("salas.json", "w") as archivo:
        json.dump(salas, archivo, indent=4)
    print("Salas guardadas exitosamente.")


def cargar_salas():
    global salas

    if os.path.exists("salas.json"):
        try:
            with open("salas.json", "r") as archivo:
                salas = json.load(archivo)
            print("Salas cargadas exitosamente.")
        except json.JSONDecodeError:
            print("Error al cargar las salas. El archivo de datos puede estar dañado.")
    else:
        print("No hay datos guardados. Cree una sala primero.")


def main():
    while True:
        opcion = menu()
        if opcion == '1':
            crear_sala()
        elif opcion == '2':
            ver_sala()
        elif opcion == '3':
            asignar_puesto()
        elif opcion == '4':
            cargar_salas()
        elif opcion == '5':
            guardar_salas()
            print("¡Hasta luego!")
            break
        else:
            print("Opción no válida, intente de nuevo.")

if __name__ == "__main__":
    main()
